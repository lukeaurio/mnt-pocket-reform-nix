# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.25)
{
  # A helpful description of your flake
  description = "MNT Pocket Reform Installation";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";

    nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable";
    nixgl = {
      url = "github:nix-community/nixGL";
      inputs.nixpkgs.follows = "nixpkgs";
    };

    # Required, nvf works best and only directly supports flakes
    nvf = {
      url = "github:NotAShelf/nvf";
      inputs.nixpkgs.follows = "nixpkgs";
    };

    home-manager = {
      url = "github:nix-community/home-manager";
      inputs.nixpkgs.follows = "nixpkgs";
    };

    # Stylix for system-wide theming
    stylix = {
      url = "github:nix-community/stylix";
      inputs.nixpkgs.follows = "nixpkgs";
    };
  };

  # Flake outputs that other flakes can use
  outputs = { self, flake-schemas, nixpkgs, nixgl, home-manager, nvf, stylix, ... }@inputs:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "aarch64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
        overlays = [ nixgl.overlay ];
        config = {
           allowUnfree = true;
           allowUnfreePredicate = _: true;
        };
      });
    in {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      # Home Manager configuration
      homeConfigurations = {
        # Default user configuration - can be customized
        "willberto" = home-manager.lib.homeManagerConfiguration {
          #inherit pkgs;
          pkgs = import nixpkgs { system = "aarch64-linux"; };
          modules = [
            # Enable stylix for theming
            stylix.homeModules.stylix
            nvf.homeManagerModules.default
            # Main home configuration
            ./home.nix
          ];
          extraSpecialArgs = {
            inherit inputs;
            nixgl = nixgl;
          };
        };
      };
    };
}
